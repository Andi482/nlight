//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NLight.IO.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NLight.IO.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot move to a previous record in forward-only mode..
        /// </summary>
        internal static string CannotMovePreviousRecordInForwardOnly {
            get {
                return ResourceManager.GetString("CannotMovePreviousRecordInForwardOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A column named &apos;{0}&apos; was not found..
        /// </summary>
        internal static string ColumnNotFound {
            get {
                return ResourceManager.GetString("ColumnNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A column with the name &apos;{0}&apos; already exists..
        /// </summary>
        internal static string DuplicateColumnName {
            get {
                return ResourceManager.GetString("DuplicateColumnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The record at index &apos;{0}&apos; appears to be corrupt. Current column index: &apos;{1}&apos;. Current position: &apos;{2}&apos;. Current raw data : &apos;{3}&apos;..
        /// </summary>
        internal static string MalformedRecordException {
            get {
                return ResourceManager.GetString("MalformedRecordException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one column must exists in the column collection. Columns may be added to the collection using the Columns property and its Add method..
        /// </summary>
        internal static string NoColumnDefined {
            get {
                return ResourceManager.GetString("NoColumnDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No current record..
        /// </summary>
        internal static string NoCurrentRecord {
            get {
                return ResourceManager.GetString("NoCurrentRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of fields in the record is greater than the available space from index to the end of the destination array..
        /// </summary>
        internal static string NotEnoughSpaceInArray {
            get {
                return ResourceManager.GetString("NotEnoughSpaceInArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid ParseErrorAction while inside a ParseError event..
        /// </summary>
        internal static string ParseErrorActionInvalidInsideParseErrorEvent {
            get {
                return ResourceManager.GetString("ParseErrorActionInvalidInsideParseErrorEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a supported ParseErrorAction..
        /// </summary>
        internal static string ParseErrorActionNotSupported {
            get {
                return ResourceManager.GetString("ParseErrorActionNotSupported", resourceCulture);
            }
        }
    }
}
